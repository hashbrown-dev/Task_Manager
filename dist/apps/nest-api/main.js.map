{"version":3,"file":"main.js","mappings":"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","sources":["webpack://workspace/./apps/nest-api/src/app/app.module.ts","webpack://workspace/./libs/todo/todo-api/src/lib/entity/Todo.ts","webpack://workspace/external commonjs \"@nestjs/common\"","webpack://workspace/external commonjs \"@nestjs/core\"","webpack://workspace/external commonjs \"@nestjs/swagger\"","webpack://workspace/external commonjs \"@nestjs/typeorm\"","webpack://workspace/external commonjs \"reflect-metadata\"","webpack://workspace/external commonjs \"tslib\"","webpack://workspace/external commonjs \"typeorm\"","webpack://workspace/webpack/bootstrap","webpack://workspace/./apps/nest-api/src/main.ts"],"sourcesContent":["import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\n// import { Todo } from '../entity/todo';\nimport { Todo } from '../../../../libs/todo/todo-api/src/lib/entity/Todo';\n\n@Module({\n  imports: [\n    \n    TypeOrmModule.forRoot({\n      type: 'mysql',\n      host: '127.0.0.1',\n      port: 3306,\n      username: 'root',\n      password: 'password',\n      database: 'local',\n      autoLoadEntities: true,\n      entities: [Todo],\n      synchronize: true,\n    })\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {}\n","import {Entity, PrimaryGeneratedColumn, Column, BaseEntity, CreateDateColumn, UpdateDateColumn} from \"typeorm\"; \n\n@Entity()\nexport class Todo extends BaseEntity {\n\n    @PrimaryGeneratedColumn(\"increment\")\n    id!: number;\n\n    @Column()\n    name!: string;\n\n    @Column({\n        type: 'varchar',\n        length: 500\n    })\n    description!: string;\n    \n    @Column({\n        type: 'enum',\n        enum: PRIORITY,\n        default: PRIORITY.LOW\n    })\n    priority!: PRIORITY;\n\n    @Column({\n        type: 'enum',\n        enum: Status,\n        default: Status.PENDING,\n    })\n    status!: Status;\n\n    @CreateDateColumn()\n    created_date!: Date;\n\n    @Column()\n    due_date!: Date;\n\n    @UpdateDateColumn()\n    updated_date!: Date;\n\n}","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/swagger\");","module.exports = require(\"@nestjs/typeorm\");","module.exports = require(\"reflect-metadata\");","module.exports = require(\"tslib\");","module.exports = require(\"typeorm\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\nimport { INestApplication, Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\nimport 'reflect-metadata';\nimport { AppModule } from './app/app.module';\nimport { SwaggerModule, DocumentBuilder } from '@nestjs/swagger';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  const globalPrefix = 'api';\n  app.setGlobalPrefix(globalPrefix);\n  app.enableCors();\n  setupSwagger(app);\n  const port = process.env.PORT || 3333;\n  await app.listen(port);\n  Logger.log(\n    `ðŸš€ Application is running on: http://localhost:${port}/${globalPrefix}`\n  );\n}\n\nbootstrap();\n\nfunction setupSwagger(app:INestApplication) {\n  const config = new DocumentBuilder()\n  .setTitle(\"myToDoApp\")\n  .setVersion(\"1.0\")\n  .addServer(\"http://localhost:3333\",\"Localhost\")\n  .addBearerAuth()\n  .build();\n\n  const options = {customSiteTitle:\"My ToDo App\", swaggerOptions:{docExpansion:\"list\"}}\n  const document = SwaggerModule.createDocument(app, config);\n  SwaggerModule.setup(\"api\", app, document, options);\n}"],"names":[],"sourceRoot":""}